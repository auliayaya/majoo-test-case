package routes

import (
	"fmt"
	"time"

	// _ "aulia-majoo-test/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
)

// @title Majoo Test API
// @version 1.0.0
// @description Majoo Test API
// @host api-majoo.auliaillahi.my.id
// @BasePath /api/v1
// @contact.name API Documentation
// @contact.url
// @in header
// @name Authorization
func Routes() *gin.Engine {
	r := gin.New()
	// r.Use(func() gin.HandlerFunc {
	// 	return func(c *gin.Context) {
	// 		loc, _ := time.LoadLocation("Asia/Jakarta")

	// 		c.Writer.Header().Set("Date", time.Now().UTC().In(loc).Format(http.TimeFormat))
	// 	}
	// }(),
	// )
	r.Use(gin.LoggerWithFormatter(func(param gin.LogFormatterParams) string {
		// your custom format
		return fmt.Sprintf("%s - [%s] \"%s %s %s %d %s \"%s\" %s\"\n",
			param.ClientIP,
			param.TimeStamp.Format(time.RFC1123),
			param.Method,
			param.Path,
			param.Request.Proto,
			param.StatusCode,
			param.Latency,
			param.Request.UserAgent(),
			param.ErrorMessage,
		)
	}))
	r.Use(gin.Recovery())
	r.Use(cors.New(cors.Config{
		AllowOrigins:     []string{"*"},
		AllowMethods:     []string{"PUT", "PATCH", "GET", "POST", "OPTIONS", "DELETE"},
		AllowHeaders:     []string{"Origin", "Authorization", "Content-Type"},
		ExposeHeaders:    []string{"Content-Length"},
		AllowCredentials: true,
		AllowOriginFunc: func(origin string) bool {
			return origin == "*"
		},
		MaxAge: 12 * time.Hour,
	}))
	// if v, ok := binding.Validator.Engine().(*validator.Validate); ok {
	// 	v.RegisterStructValidation(UserStructLevelValidation, User{})
	// }
	r.NoRoute(func(c *gin.Context) {
		c.JSON(404, gin.H{"code": "PAGE_NOT_FOUND", "message": "Page not found"})
	})

	// api route
	User(r)
	Merchant(r)
	Outlet(r)

	return r
}
